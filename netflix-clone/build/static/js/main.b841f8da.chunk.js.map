{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b841f8da.chunk.js","sourcesContent":["import axios from \"axios\";\n\n/**base url to make requests to the movie database */\nconst instance=axios.create({\n    baseURL:\"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, {useState, useEffect} from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\"\n\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title,fetchUrl, isLargeRow}) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\n    useEffect(()=> {\n        // if [] is blank, run only once. for [movies] everytime movie changes run this code\n        async function fetchData(){\n            const request=await axios.get(fetchUrl);\n            setMovies(request.data.results)\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts={\n        height:\"390\",\n        width:\"100%\",\n        playerVars:{\n            //https://developers.google.com/youtube/player_parameters\n            autoplay:1,\n        },\n    };\n\n    const handleClick=(movie)=> {\n        if(trailerUrl){\n            setTrailerUrl(\"\");\n        } else{\n            movieTrailer(movie?.name || \"\")\n            .then((url)=>{\n                const urlParams=new URLSearchParams (new URL(url).search); //to get videoid\n                setTrailerUrl(urlParams.get('v'));\n            }).catch((error)=>console.log(error));\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {movies.map(movie => (\n                    <img \n                    key={movie.id}\n                    onClick={()=>handleClick(movie)}\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                    src={`${base_url}${\n                        isLargeRow ? movie.poster_path: movie.backdrop_path\n                    }`} \n                    alt={movie.name}/>\n                ))}\n\n            </div>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\n        </div>\n    );\n}\n\nexport default Row;\n","const API_KEY= \"3d735ee125b701cf81546af3798c5df7\";\n\nconst requests={\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en=US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\n\nfunction Banner() {\n    const [movie, setMovie]=useState([]);\n    useEffect(()=>{\n        async function fetchData(){\n            const request=await axios.get(requests.fetchNetflixOriginals);\n            setMovie(\n                request.data.results[\n                Math.floor(Math.random()*request.data.results.length-1)\n            ]\n            );\n            return request;\n        }\n        fetchData();\n    },[]);\n\n    console.log(movie);\n    function truncate(str,n){\n        return str?.length>n?str.substr(0,n-1)+\"...\":str;\n    }\n    return (\n       <header className=\"banner\" style={{\n           backgroundSize:\"cover\",\n           backgroundImage:`url(\n               \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n               )`,\n            backgroundPosition:\"center center\",\n       }}\n       >\n           <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name} </h1>\n            <div className=\"banner_buttons\">\n                <button className=\"banner_button\">Play</button>\n                <button className=\"banner_button\">My List</button>\n            </div>\n        <h1 className=\"banner_description\">\n       {truncate(movie?.overview,150)}\n        </h1>\n           </div>\n           <div className=\"banner_fadeBottom\"/>\n       </header>\n    );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from 'react';\nimport './Nav.css';\n\nfunction Nav() {\n\n    const [show, handleShow] = useState(false);\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",()=>{\n            if (window.scrollY>100){\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return()=>{\n            window.removeEventListener(\"scroll\");\n        };\n    },[]);\n\n    return (\n        <div className={`nav ${show && \"nav_black\"}`}>\n            <img\n            className=\"nav_logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\"\n            alt=\"Netflix Logo\"/>\n            <img\n            className=\"nav_avatar\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Netflix-avatar.png/640px-Netflix-avatar.png\"\n            alt=\"Netflix Logo\"/>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row \n      title=\"NETFLIX ORIGINALS\" \n      fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}